@page "/seating"

<PageTitle>Seating Charts</PageTitle>

<h1 style="text-align: center;">Trombone Seating Charts</h1>

<!-- Navigation Buttons -->
<div class="chart-nav">
    <button @onclick="@(() => SelectChart("split"))">M/G Split</button>
    <button @onclick="@(() => SelectChart("mrh"))">MRH</button>
    <button @onclick="@(() => SelectChart("parade"))">Parade</button>
    <button @onclick="@(() => SelectChart("gsr"))">GSR</button>
    <button @onclick="@(() => SelectChart("indoor"))">Indoor</button>
    <button @onclick="@(() => SelectChart("other"))">Other</button>
</div>

<!-- Chart Images -->
<div style="width: 100%; display: flex; flex-direction: column; align-items: center; gap: 90px;">
    <div class="chart-container @(selectedChart == "split" ? "glow" : "")" id="split">
        <div class="chart-title">Maroon/Gold Split</div>
        <img src="img/charts/split.png" alt="Maroon/Gold Split" />
    </div>

    <div class="chart-container @(selectedChart == "mrh" ? "glow" : "")" id="mrh">
        <div class="chart-title">MRH</div>
        <img src="img/charts/mrh.png" alt="MRH Chart" />
    </div>

    <div class="chart-container @(selectedChart == "parade" ? "glow" : "")" id="parade">
        <div class="chart-title">Parade</div>
        <img src="img/charts/parade.png" alt="Parade Chart" />
    </div>

    <div class="chart-container @(selectedChart == "gsr" ? "glow" : "")" id="gsr">
        <div class="chart-title">GSR</div>
        <img src="img/charts/gsr.png" alt="GSR Chart" />
    </div>

    <div class="chart-container @(selectedChart == "indoor" ? "glow" : "")" id="indoor">
        <div class="chart-title">Indoor</div>
        <img src="img/charts/indoor.png" alt="Indoor Chart" />
    </div>

    <div class="chart-container @(selectedChart == "other" ? "glow" : "")" id="other">
        <div class="chart-title">Other</div>
        <img src="img/charts/other.png" alt="Other Chart" />
    </div>
</div>

@code {
    private string selectedChart = string.Empty;

    private async Task SelectChart(string id)
    {
        selectedChart = id;
        await Task.Delay(100);
        await ScrollToSection(id);
    }

    private async Task ScrollToSection(string id)
    {
        await JS.InvokeVoidAsync("scrollToSection", id);
    }

    [Inject] private IJSRuntime JS { get; set; } = default!;
}
